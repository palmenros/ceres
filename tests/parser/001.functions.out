(start (program (function_definition fn function_name ( (declaration_list (declaration a : (type i32)) , (declaration_list (declaration b : (type i32)))) ) (type i16) (block { })) (program (function_definition fn mutable_parameters ( (declaration_list (declaration var a : (type i32))) ) (type i16) (block { (statement_list (statement (assignment a = (expression (expression a) * (expression 2))) ;) (statement (return_statement return (expression a) ;))) })) (program (function_definition fn returns_void ( ) (block { })) (program (function_definition fn gcd ( (declaration_list (declaration a : (type i32)) , (declaration_list (declaration b : (type i32)))) ) (type i32) (block { (statement_list (statement (declaration_statement var max = (expression a) ;)) (statement (declaration_statement var min = (expression b) ;)) (statement (if_statement if (expression (expression b) > (expression a)) (block { (statement_list (statement (assignment max = (expression b)) ;) (statement (assignment min = (expression a)) ;)) }))) (statement (if_statement if (expression (expression min) == (expression 0)) (block { (statement_list (statement (return_statement return (expression max) ;))) }))) (statement (return_statement return (expression (function_call gcd ( (expression_list (expression b) , (expression_list (expression (expression a) % (expression b)))) ))) ;))) })) (program (function_definition fn iterative_gcd ( (declaration_list (declaration var a : (type i32)) , (declaration_list (declaration var b : (type i32)))) ) (type i32) (block { (statement_list (statement (declaration_statement var q : (type i32) ;)) (statement (declaration_statement var r : (type i32) ;)) (statement (while_statement while (expression (expression b) > (expression 0)) (block { (statement_list (statement (assignment q = (expression (expression a) / (expression b))) ;) (statement (assignment r = (expression (expression a) % (expression b))) ;) (statement (assignment a = (expression b)) ;) (statement (assignment b = (expression r)) ;)) }))) (statement (return_statement return (expression a) ;))) }))))))) <EOF>)
